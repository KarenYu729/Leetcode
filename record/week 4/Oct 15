week 4
Oct 15



"""
--------------------------------------题目分割线----------------------------------------------
"""
237. Delete Node in a Linked List <medium>
输入：
ListNode
输出：
无

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteNode(self, node):
        """
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """
        
        node.val = node.next.val
        node.next = node.next.next

效果：
Runtime: 52 ms, faster than 40.33% of Python online submissions for Delete Node in a Linked List.
Memory Usage: 13.7 MB, less than 81.74% of Python online submissions for Delete Node in a Linked List.

说一下，这里并没有给出要改的链表，而是给出了待修改的那个part的链表，也就是说node的第一个数字就是要舍弃的数字，
这里的思路就是把这个点的下一个点的值拿给这个位置，然后连接断开跟下一个节点的连接，而直接连到下下个节点。





"""
--------------------------------------题目分割线----------------------------------------------
"""
92. Reverse Linked List II <medium>
输入：
ListNode
int
int
输出：
ListNode

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def reverseBetween(self, head, left, right):
        """
        :type head: ListNode
        :type left: int
        :type right: int
        :rtype: ListNode
        """
        if not head or left == right: 
            return head
        
        dummy_head = ListNode(val=-1, next=head)
        p_prev = dummy_head
        
        # Iterate p_prev to the (left-1)-th node
        for _ in range(left - 1):
            p_prev = p_prev.next
            
        p_cur = p_prev.next # p_cur is at the left-th node
        
        # Within the reverse part, iteratively move the next node of p_cur to the beginning
        for _ in range(right - left):
            p_next = p_cur.next
            p_cur.next = p_next.next
            p_next.next = p_prev.next
            p_prev.next = p_next
        
        return dummy_head.next

效果：
Runtime: 32 ms, faster than 47.91% of Python online submissions for Reverse Linked List II.
Memory Usage: 13.5 MB, less than 94.74% of Python online submissions for Reverse Linked List II.

reference：
https://leetcode.com/problems/reverse-linked-list-ii/discuss/1167109/Python3-One-pass-iterative-solution-beats-95.50-(with-figure-explanation)


