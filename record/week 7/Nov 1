week 7
Nov 1



"""
--------------------------------------题目分割线----------------------------------------------
"""
786. K-th Smallest Prime Fraction <medium>
输入：
int[]
int
输出：
int

class Solution(object):
    def kthSmallestPrimeFraction(self, arr, k):
        """
        :type arr: List[int]
        :type k: int
        :rtype: List[int]
        """
        heap = []
        n = len(arr)
        for i in range(n):
            heappush(heap,(float(arr[0])/float(arr[n-1-i]),i,0))
        while k:
            frac, row, col = heappop(heap)
            if col < n-1-row:
                heappush(heap, (float(arr[col+1])/float(arr[n-1-row]),row,col+1))
            k -= 1
            
        return [arr[col], arr[n-1-row]]
        

效果：
Runtime: 3974 ms, faster than 30.00% of Python online submissions for K-th Smallest Prime Fraction.
Memory Usage: 13.8 MB, less than 70.00% of Python online submissions for K-th Smallest Prime Fraction.

reference:
https://leetcode.com/problems/k-th-smallest-prime-fraction/discuss/1839955/Python-or-Heap-or-Easy-to-Understand-Clean-Code



"""
--------------------------------------题目分割线----------------------------------------------
"""
778. Swim in Rising Water <hard>
输入：
int[int[]]
输出：
int

class Solution(object):
    def swimInWater(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        dirs = [(0,1), (0,-1), (1,0), (-1,0)]
        n = len(grid)
        # heap: totaltime, row, col
        heap = [(grid[0][0], (0, 0))]
        visited = set()
        
        while heap:
            totalTime, (i, j) = heapq.heappop(heap)
            if (i, j) in visited:
                continue
            visited.add((i, j))
            if i == n-1 and j == n-1:
                return totalTime
            for dx, dy in dirs:
                newi, newj = i+dx, j+dy
                if 0<=newi<n and 0<=newj<n:
                    heapq.heappush(heap, (max(totalTime, grid[newi][newj]), (newi, newj)))
        
        return -1
        

效果：
Runtime: 453 ms, faster than 14.13% of Python online submissions for Swim in Rising Water.
Memory Usage: 14.1 MB, less than 71.20% of Python online submissions for Swim in Rising Water.

reference:
https://leetcode.com/problems/swim-in-rising-water/discuss/1358415/Python-solution-using-heap


"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



        

效果：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



        

效果：



"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



        

效果：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



        

效果：











