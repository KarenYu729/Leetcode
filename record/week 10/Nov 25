week 10
Nov 25



"""
--------------------------------------题目分割线----------------------------------------------
"""
1090. Largest Values From Labels <medium>
输入：
int[]
int[]
int
int
输出：
int

"""
***********************解法一分割线***********************
"""
class Solution(object):
    def largestValsFromLabels(self, values, labels, numWanted, useLimit):
        """
        :type values: List[int]
        :type labels: List[int]
        :type numWanted: int
        :type useLimit: int
        :rtype: int
        """
        d = collections.defaultdict(int)
        ans = 0
        l = numWanted
        for i, j in sorted(list(zip(values, labels)), reverse = True):
            if(d[j] < useLimit and l):
                l -= 1
                d[j] += 1
                ans += i
        return ans
        
效果：
Runtime: 264 ms, faster than 65.38% of Python online submissions for Largest Values From Labels.
Memory Usage: 18.4 MB, less than 34.62% of Python online submissions for Largest Values From Labels.

reference：
https://leetcode.com/problems/largest-values-from-labels/discuss/2277331/71-TC-and-68-SC-easy-python-solution

"""
***********************解法二分割线***********************
"""
class Solution(object):
    def largestValsFromLabels(self, values, labels, numWanted, useLimit):
        """
        :type values: List[int]
        :type labels: List[int]
        :type numWanted: int
        :type useLimit: int
        :rtype: int
        """
        dic = collections.defaultdict(int)
        
        heap = []
        for i in range(len(values)):
            heap.append([-values[i], labels[i]])
            
        heapify(heap)
        arr = []
        while len(arr) < numWanted and heap:
            nodeValue, nodeLabel = heapq.heappop(heap)
            if dic[nodeLabel] < useLimit:
                arr.append(-nodeValue)
                dic[nodeLabel] += 1
        
        return sum(arr)

效果：
Runtime: 310 ms, faster than 46.15% of Python online submissions for Largest Values From Labels.
Memory Usage: 19 MB, less than 23.08% of Python online submissions for Largest Values From Labels.

reference：
https://leetcode.com/problems/largest-values-from-labels/discuss/2774024/Heap


"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：





"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



