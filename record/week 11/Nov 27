week 11
Nov 27




"""
--------------------------------------题目分割线----------------------------------------------
"""
435. Non-overlapping Intervals <medium>
输入：
int[int[]]
输出：
int

class Solution(object):
    def eraseOverlapIntervals(self, intervals):
        """
        :type intervals: List[List[int]]
        :rtype: int
        """
        count = 0 
        intervals.sort()
        # keep the interval that has the shorter end since longer end will overlap with other intervals
        for i in range(len(intervals) - 1):
            if intervals[i + 1][0] < intervals[i][1]:
                count += 1
                intervals[i + 1][1] = min(intervals[i + 1][1],intervals[i][1])
        
        return count

效果：
Runtime: 2246 ms, faster than 67.45% of Python online submissions for Non-overlapping Intervals.
Memory Usage: 58.5 MB, less than 92.80% of Python online submissions for Non-overlapping Intervals.

reference：
https://leetcode.com/problems/non-overlapping-intervals/discuss/2730719/Python-Greedy-Solution


"""
--------------------------------------题目分割线----------------------------------------------
"""
781. Rabbits in Forest <medium>
输入：
int[]
输出：
int

class Solution(object):
    def numRabbits(self, answers):
        """
        :type answers: List[int]
        :rtype: int
        """
        cnt = Counter(answers)
        res = 0
        for i in cnt:
            while cnt[i] >= i+1:
                res += i+1
                cnt[i] -= (i+1)
            if cnt[i] > 0:
                res += i+1
                
        return res
        
效果：
Runtime: 72 ms, faster than 10.71% of Python online submissions for Rabbits in Forest.
Memory Usage: 13.8 MB, less than 25.00% of Python online submissions for Rabbits in Forest.

reference：
https://leetcode.com/problems/rabbits-in-forest/discuss/2143035/Basic-or-Easy-or-Python-or-Dictionary
https://leetcode.com/problems/rabbits-in-forest/discuss/2186012/Simple-Solution-or-Easy-or-O(n)-or-Using-Map-or-Counter-or-Python


"""
--------------------------------------题目分割线----------------------------------------------
"""
807. Max Increase to Keep City Skyline <medium>
输入：
int[int[]]
输出：
int

class Solution(object):
    def maxIncreaseKeepingSkyline(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        row_max = [0]*len(grid)
        col_max = [0]*len(grid[0])
        
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                row_max[i] = max(row_max[i], grid[i][j])
                col_max[j] = max(col_max[j], grid[i][j])
        res = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                res += min(row_max[i], col_max[j]) - grid[i][j]
        return res

效果：
Runtime: 116 ms, faster than 57.26% of Python online submissions for Max Increase to Keep City Skyline.
Memory Usage: 13.3 MB, less than 87.90% of Python online submissions for Max Increase to Keep City Skyline.

reference：
https://leetcode.com/problems/max-increase-to-keep-city-skyline/discuss/2270359/PYTHON-3-EASY-or-SIMPLE-SOLUTION-or-STRAIGHT-FORWARD


"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：





"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：




"""
--------------------------------------题目分割线----------------------------------------------
"""

输入：

输出：



效果：


reference：



